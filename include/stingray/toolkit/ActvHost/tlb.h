///////////////////////////////////////////////////////////////////////////////
// tlb.h
//
// Copyright (c) 1999-2009 Rogue Wave Software, Inc.  All Rights Reserved.
//
// This computer software is owned by Rogue Wave Software, Inc. and is protected by
// U.S. copyright laws and other laws and by international treaties. This
// computer software is furnished by Rogue Wave Software, Inc. pursuant to a written
// license agreement and may be used, copied, transmitted, and stored
// only in accordance with the terms of such license agreement and with
// the inclusion of the above copyright notice.  This computer software or
// any other copies thereof may not be provided or otherwise made available
// to any other person.
//
// U.S. Government Restricted Rights.  This computer software:
//      (a) was developed at private expense and is in all respects the
//          proprietary information of Rogue Wave Software, Inc.;
//      (b) was not developed with government funds;
//      (c) is a trade secret of Rogue Wave Software, Inc. for all purposes of the
//          Freedom of Information Act; and
//      (d) is a commercial item and thus, pursuant to Section 12.212
//          of the Federal Acquisition Regulations (FAR) and DFAR
//          Supplement Section 227.7202, Government’s use, duplication or
//          disclosure of the computer software is subject to the restrictions
//          set forth by Rogue Wave Software, Inc.
//
///////////////////////////////////////////////////////////////////////////////


/* This header file machine-generated by mktyplib.exe */
/* Interface to type library: BrowseHelper */

#ifndef _BrowseHelper_H_
#define _BrowseHelper_H_

//
// SEC Extension DLL
// Initialize declaration context
//
#ifdef _SECDLL
	#undef AFXAPP_DATA
	#define AFXAPP_DATA AFXAPI_DATA
	#undef AFX_DATA
	#define AFX_DATA    SEC_DATAEXT
#endif //_SECDLL

#ifndef BEGIN_INTERFACE
#define BEGIN_INTERFACE
#endif

interface ISArrayDesc;

#ifndef SECA_OBJTYPE_DEF
#define SECA_OBJTYPE_DEF
typedef enum {
    TYPE_FUNCTION = 0,
    TYPE_PROPERTY = 1,
    TYPE_CONSTANT = 2,
    TYPE_PARAMETER = 3
} SECA_OBJTYPE;
#endif

//
// Some IID/CLSID inits
//

//static const CLSID CLSID_VBScript_local =
//{ 0xb54f3741, 0x5b07, 0x11cf, { 0xa4, 0xb0, 0x0, 0xaa, 0x0,  0x4a, 0x55, 0xe8 } };

static const IID IID_ISCollection =
{ 0x19FEEECCL,0x4104, 0x101B, { 0xB8,0x26,0x00,0xDD,0x01,0x10,0x3D,0xE1 }};

static const IID IID_ISTypeLibrary =
{ 0x19FEEEC3L,0x4104, 0x101B, { 0xB8,0x26,0x00,0xDD,0x01,0x10,0x3D,0xE1 }};

static const IID IID_ISTypeInformation=
{0x19FEEEC4L,0x4104,  0x101B, { 0xB8,0x26,0x00,0xDD,0x01,0x10,0x3D,0xE1 }};

static const IID IID_ISBrowseHelper=
{0x19FEEEC2L,0x4104,  0x101B, { 0xB8,0x26,0x00,0xDD,0x01,0x10,0x3D,0xE1 }};

static const IID IID_ISTypeDesc=
{0x19FEEED1L,0x4104,  0x101B, { 0xB8,0x26,0x00,0xDD,0x01,0x10,0x3D,0xE1 }};

static const IID IID_ISArrayBound=
{0x19FEEED3L,0x4104,  0x101B, { 0xB8,0x26,0x00,0xDD,0x01,0x10,0x3D,0xE1 }};

static const IID IID_ISArrayDesc=
{0x19FEEED2L,0x4104,  0x101B, { 0xB8,0x26,0x00,0xDD,0x01,0x10,0x3D,0xE1 }};

static const IID IID_ISInterface=
{0x19FEEEC5L,0x4104,  0x101B, { 0xB8,0x26,0x00,0xDD,0x01,0x10,0x3D,0xE1 }};

static const IID IID_ISDispinterface=
{0x19FEEEC6L,0x4104,  0x101B, { 0xB8,0x26,0x00,0xDD,0x01,0x10,0x3D,0xE1 }};

static const IID IID_ISModule=
{0x19FEEEC7L,0x4104,  0x101B, { 0xB8,0x26,0x00,0xDD,0x01,0x10,0x3D,0xE1 }};

static const IID IID_ISCoClass=
{0x19FEEEC8L,0x4104,  0x101B, { 0xB8,0x26,0x00,0xDD,0x01,0x10,0x3D,0xE1 }};

static const IID IID_ISEnum=
{0x19FEEECDL,0x4104,  0x101B, { 0xB8,0x26,0x00,0xDD,0x01,0x10,0x3D,0xE1 }};

static const IID IID_ISStruct=
{0x19FEEECEL,0x4104,  0x101B, { 0xB8,0x26,0x00,0xDD,0x01,0x10,0x3D,0xE1 }};

static const IID IID_ISUnion=
{0x19FEEECFL,0x4104,  0x101B, { 0xB8,0x26,0x00,0xDD,0x01,0x10,0x3D,0xE1 }};

static const IID IID_ISAlias=
{0x19FEEED0L,0x4104,  0x101B, { 0xB8,0x26,0x00,0xDD,0x01,0x10,0x3D,0xE1 }};

static const IID IID_ISFunction=
{0x19FEEEC9L,0x4104,  0x101B, { 0xB8,0x26,0x00,0xDD,0x01,0x10,0x3D,0xE1 }};

static const IID IID_ISProperty=
{0x19FEEECAL,0x4104,  0x101B, { 0xB8,0x26,0x00,0xDD,0x01,0x10,0x3D,0xE1 }};

static const IID IID_ISConstant=
{0x19FEEED4L,0x4104,  0x101B, { 0xB8,0x26,0x00,0xDD,0x01,0x10,0x3D,0xE1 }};

static const IID IID_ISParameter=
{0x19FEEECBL,0x4104,  0x101B, { 0xB8,0x26,0x00,0xDD,0x01,0x10,0x3D,0xE1 }};

// From <ActivScp.h> to resolve bogus link error
static const IID CATID_SECActiveScriptParse=
{ 0xf0b7a1a2, 0x9847, 0x11cf, { 0x8f, 0x20, 0x0, 0x80, 0x5f, 0x2c, 0xd0, 0x64 }};



/* Definition of interface: ISCollection */
#undef INTERFACE
#define INTERFACE ISCollection

DECLARE_INTERFACE_(ISCollection, SECADispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* SECADispatch methods */
/* You must describe methods for this interface here */
#endif

    /* ISCollection methods */
    STDMETHOD_(long, get_Count)(THIS) PURE;
    STDMETHOD_(IDispatch *, get_Item)(THIS_ long Index) PURE;
    STDMETHOD_(IUnknown *, get__NewEnum)(THIS) PURE;
};


/* Definition of interface: ISTypeLibrary */
#undef INTERFACE
#define INTERFACE ISTypeLibrary

DECLARE_INTERFACE_(ISTypeLibrary, SECADispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* SECADispatch methods */
/* You must describe methods for this interface here */
#endif

    /* ISTypeLibrary methods */
    STDMETHOD_(BSTR, get_Name)(THIS) PURE;
    STDMETHOD_(BSTR, get_Documentation)(THIS) PURE;
    STDMETHOD_(long, get_HelpContext)(THIS) PURE;
    STDMETHOD_(BSTR, get_HelpFile)(THIS) PURE;
    STDMETHOD_(long, get_LocaleID)(THIS) PURE;
    STDMETHOD_(int, get_MajorVersion)(THIS) PURE;
    STDMETHOD_(int, get_MinorVersion)(THIS) PURE;
    STDMETHOD_(ISCollection FAR*, get_TypeInfos)(THIS) PURE;
};


/* Definition of interface: ISTypeInformation */
#undef INTERFACE
#define INTERFACE ISTypeInformation

DECLARE_INTERFACE_(ISTypeInformation, SECADispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* SECADispatch methods */
/* You must describe methods for this interface here */
#endif

    /* ISTypeInformation methods */
    STDMETHOD_(BSTR, get_Name)(THIS) PURE;
    STDMETHOD_(BSTR, get_Documentation)(THIS) PURE;
    STDMETHOD_(long, get_HelpContext)(THIS) PURE;
    STDMETHOD_(BSTR, get_HelpFile)(THIS) PURE;
    STDMETHOD_(TYPEKIND, get_TypeInfoKind)(THIS) PURE;
    STDMETHOD(_InitTypeInfo)(THIS_ LPTYPEINFO ptinfo) PURE;
};


/* Definition of interface: ISBrowseHelper */
#undef INTERFACE
#define INTERFACE ISBrowseHelper

DECLARE_INTERFACE_(ISBrowseHelper, SECADispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* SECADispatch methods */
/* You must describe methods for this interface here */
#endif

    /* ISBrowseHelper methods */
    STDMETHOD_(ISTypeLibrary FAR*, BrowseTypeLibrary)(THIS_ BSTR TypeLibraryPath) PURE;
};


/* Definition of interface: ISTypeDesc */
#undef INTERFACE
#define INTERFACE ISTypeDesc

DECLARE_INTERFACE_(ISTypeDesc, SECADispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* SECADispatch methods */
/* You must describe methods for this interface here */
#endif

    /* ISTypeDesc methods */
    STDMETHOD_(short, get_Type)(THIS) PURE;
    STDMETHOD_(ISTypeInformation FAR*, get_UserDefinedDesc)(THIS) PURE;
    STDMETHOD_(ISArrayDesc FAR*, get_ArrayDesc)(THIS) PURE;
    STDMETHOD_(ISTypeDesc FAR*, get_PointerDesc)(THIS) PURE;
};


/* Definition of interface: ISArrayBound */
#undef INTERFACE
#define INTERFACE ISArrayBound

DECLARE_INTERFACE_(ISArrayBound, SECADispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* SECADispatch methods */
/* You must describe methods for this interface here */
#endif

    /* ISArrayBound methods */
    STDMETHOD_(long, get_ElementsCount)(THIS) PURE;
    STDMETHOD_(long, get_LowerBound)(THIS) PURE;
};


/* Definition of interface: ISArrayDesc */
#undef INTERFACE
#define INTERFACE ISArrayDesc

DECLARE_INTERFACE_(ISArrayDesc, SECADispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* SECADispatch methods */
/* You must describe methods for this interface here */
#endif

    /* ISArrayDesc methods */
    STDMETHOD_(ISTypeDesc FAR*, get_ElementType)(THIS) PURE;
    STDMETHOD_(ISCollection FAR*, get_ArrayBounds)(THIS) PURE;
};


/* Definition of interface: ISInterface */
#undef INTERFACE
#define INTERFACE ISInterface

DECLARE_INTERFACE_(ISInterface, ISTypeInformation)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* SECADispatch methods */
/* You must describe methods for this interface here */

    /* ISTypeInformation methods */
    STDMETHOD_(BSTR, get_Name)(THIS) PURE;
    STDMETHOD_(BSTR, get_Documentation)(THIS) PURE;
    STDMETHOD_(long, get_HelpContext)(THIS) PURE;
    STDMETHOD_(BSTR, get_HelpFile)(THIS) PURE;
    STDMETHOD_(TYPEKIND, get_TypeInfoKind)(THIS) PURE;
    STDMETHOD(_InitTypeInfo)(THIS_ LPTYPEINFO ptinfo) PURE;
#endif

    /* ISInterface methods */
    STDMETHOD_(IDispatch *, get_Functions)(THIS) PURE;
};


/* Definition of interface: ISDispinterface */
#undef INTERFACE
#define INTERFACE ISDispinterface

DECLARE_INTERFACE_(ISDispinterface, ISTypeInformation)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* SECADispatch methods */
/* You must describe methods for this interface here */

    /* ISTypeInformation methods */
    STDMETHOD_(BSTR, get_Name)(THIS) PURE;
    STDMETHOD_(BSTR, get_Documentation)(THIS) PURE;
    STDMETHOD_(long, get_HelpContext)(THIS) PURE;
    STDMETHOD_(BSTR, get_HelpFile)(THIS) PURE;
    STDMETHOD_(TYPEKIND, get_TypeInfoKind)(THIS) PURE;
    STDMETHOD(_InitTypeInfo)(THIS_ LPTYPEINFO ptinfo) PURE;
#endif

    /* ISDispinterface methods */
    STDMETHOD_(ISCollection FAR*, get_Properties)(THIS) PURE;
    STDMETHOD_(ISCollection FAR*, get_Methods)(THIS) PURE;
};


/* Definition of interface: ISModule */
#undef INTERFACE
#define INTERFACE ISModule

DECLARE_INTERFACE_(ISModule, ISTypeInformation)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* SECADispatch methods */
/* You must describe methods for this interface here */

    /* ISTypeInformation methods */
    STDMETHOD_(BSTR, get_Name)(THIS) PURE;
    STDMETHOD_(BSTR, get_Documentation)(THIS) PURE;
    STDMETHOD_(long, get_HelpContext)(THIS) PURE;
    STDMETHOD_(BSTR, get_HelpFile)(THIS) PURE;
    STDMETHOD_(TYPEKIND, get_TypeInfoKind)(THIS) PURE;
    STDMETHOD(_InitTypeInfo)(THIS_ LPTYPEINFO ptinfo) PURE;
#endif

    /* ISModule methods */
    STDMETHOD_(ISCollection FAR*, get_Functions)(THIS) PURE;
};


/* Definition of interface: ISCoClass */
#undef INTERFACE
#define INTERFACE ISCoClass

DECLARE_INTERFACE_(ISCoClass, ISTypeInformation)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* SECADispatch methods */
/* You must describe methods for this interface here */

    /* ISTypeInformation methods */
    STDMETHOD_(BSTR, get_Name)(THIS) PURE;
    STDMETHOD_(BSTR, get_Documentation)(THIS) PURE;
    STDMETHOD_(long, get_HelpContext)(THIS) PURE;
    STDMETHOD_(BSTR, get_HelpFile)(THIS) PURE;
    STDMETHOD_(TYPEKIND, get_TypeInfoKind)(THIS) PURE;
    STDMETHOD(_InitTypeInfo)(THIS_ LPTYPEINFO ptinfo) PURE;
#endif

    /* ISCoClass methods */
    STDMETHOD_(ISCollection FAR*, get_Interfaces)(THIS) PURE;
};


/* Definition of interface: ISEnum */
#undef INTERFACE
#define INTERFACE ISEnum

DECLARE_INTERFACE_(ISEnum, ISTypeInformation)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* SECADispatch methods */
/* You must describe methods for this interface here */

    /* ISTypeInformation methods */
    STDMETHOD_(BSTR, get_Name)(THIS) PURE;
    STDMETHOD_(BSTR, get_Documentation)(THIS) PURE;
    STDMETHOD_(long, get_HelpContext)(THIS) PURE;
    STDMETHOD_(BSTR, get_HelpFile)(THIS) PURE;
    STDMETHOD_(TYPEKIND, get_TypeInfoKind)(THIS) PURE;
    STDMETHOD(_InitTypeInfo)(THIS_ LPTYPEINFO ptinfo) PURE;
#endif

    /* ISEnum methods */
    STDMETHOD_(ISCollection FAR*, get_Elements)(THIS) PURE;
};

/* Definition of interface: ISStruct */
#undef INTERFACE
#define INTERFACE ISStruct

DECLARE_INTERFACE_(ISStruct, ISTypeInformation)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* SECADispatch methods */
/* You must describe methods for this interface here */

    /* ISTypeInformation methods */
    STDMETHOD_(BSTR, get_Name)(THIS) PURE;
    STDMETHOD_(BSTR, get_Documentation)(THIS) PURE;
    STDMETHOD_(long, get_HelpContext)(THIS) PURE;
    STDMETHOD_(BSTR, get_HelpFile)(THIS) PURE;
    STDMETHOD_(TYPEKIND, get_TypeInfoKind)(THIS) PURE;
    STDMETHOD(_InitTypeInfo)(THIS_ LPTYPEINFO ptinfo) PURE;
#endif

    /* ISStruct methods */
    STDMETHOD_(ISCollection FAR*, get_Members)(THIS) PURE;
};

/* Definition of interface: ISUnion */
#undef INTERFACE
#define INTERFACE ISUnion

DECLARE_INTERFACE_(ISUnion, ISTypeInformation)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* SECADispatch methods */
/* You must describe methods for this interface here */

    /* ISTypeInformation methods */
    STDMETHOD_(BSTR, get_Name)(THIS) PURE;
    STDMETHOD_(BSTR, get_Documentation)(THIS) PURE;
    STDMETHOD_(long, get_HelpContext)(THIS) PURE;
    STDMETHOD_(BSTR, get_HelpFile)(THIS) PURE;
    STDMETHOD_(TYPEKIND, get_TypeInfoKind)(THIS) PURE;
    STDMETHOD(_InitTypeInfo)(THIS_ LPTYPEINFO ptinfo) PURE;
#endif

    /* ISUnion methods */
    STDMETHOD_(ISCollection FAR*, get_Members)(THIS) PURE;
};

/* Definition of interface: ISAlias */
#undef INTERFACE
#define INTERFACE ISAlias

DECLARE_INTERFACE_(ISAlias, ISTypeInformation)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* SECADispatch methods */
/* You must describe methods for this interface here */

    /* ISTypeInformation methods */
    STDMETHOD_(BSTR, get_Name)(THIS) PURE;
    STDMETHOD_(BSTR, get_Documentation)(THIS) PURE;
    STDMETHOD_(long, get_HelpContext)(THIS) PURE;
    STDMETHOD_(BSTR, get_HelpFile)(THIS) PURE;
    STDMETHOD_(TYPEKIND, get_TypeInfoKind)(THIS) PURE;
    STDMETHOD(_InitTypeInfo)(THIS_ LPTYPEINFO ptinfo) PURE;
#endif

    /* ISAlias methods */
    STDMETHOD_(ISTypeDesc FAR*, get_BaseType)(THIS) PURE;
};

/* Definition of interface: ISFunction */
#undef INTERFACE
#define INTERFACE ISFunction

DECLARE_INTERFACE_(ISFunction, SECADispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* SECADispatch methods */
/* You must describe methods for this interface here */
#endif

    /* ISFunction methods */
    STDMETHOD_(BSTR, get_Name)(THIS) PURE;
    STDMETHOD_(BSTR, get_Documentation)(THIS) PURE;
    STDMETHOD_(long, get_HelpContext)(THIS) PURE;
    STDMETHOD_(BSTR, get_HelpFile)(THIS) PURE;
    STDMETHOD_(ISTypeDesc FAR*, get_ReturnType)(THIS) PURE;
    STDMETHOD_(ISCollection FAR*, get_Parameters)(THIS) PURE;
    STDMETHOD_(MEMBERID, get_Memberid)(THIS) PURE;
    STDMETHOD_(CALLCONV, get_CallConvention)(THIS) PURE;
    STDMETHOD_(FUNCKIND, get_FuncKind)(THIS) PURE;
    STDMETHOD_(INVOKEKIND, get_InvocationKind)(THIS) PURE;
    STDMETHOD_(SECA_OBJTYPE, get_Kind)(THIS) PURE;
    STDMETHOD_(short, get_FuncFlags)(THIS) PURE;
};

/* Definition of interface: ISProperty */
#undef INTERFACE
#define INTERFACE ISProperty

DECLARE_INTERFACE_(ISProperty, SECADispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* SECADispatch methods */
/* You must describe methods for this interface here */
#endif

    /* ISProperty methods */
    STDMETHOD_(BSTR, get_Name)(THIS) PURE;
    STDMETHOD_(BSTR, get_Documentation)(THIS) PURE;
    STDMETHOD_(long, get_HelpContext)(THIS) PURE;
    STDMETHOD_(BSTR, get_HelpFile)(THIS) PURE;
    STDMETHOD_(ISTypeDesc FAR*, get_Type)(THIS) PURE;
    STDMETHOD_(MEMBERID, get_Memberid)(THIS) PURE;
    STDMETHOD_(SECA_OBJTYPE, get_Kind)(THIS) PURE;
};

/* Definition of interface: ISConstant */
#undef INTERFACE
#define INTERFACE ISConstant

DECLARE_INTERFACE_(ISConstant, SECADispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* SECADispatch methods */
/* You must describe methods for this interface here */
#endif

    /* ISConstant methods */
    STDMETHOD_(BSTR, get_Name)(THIS) PURE;
    STDMETHOD_(BSTR, get_Documentation)(THIS) PURE;
    STDMETHOD_(long, get_HelpContext)(THIS) PURE;
    STDMETHOD_(BSTR, get_HelpFile)(THIS) PURE;
    STDMETHOD_(ISTypeDesc FAR*, get_Type)(THIS) PURE;
    STDMETHOD_(VARIANT, get_Value)(THIS) PURE;
    STDMETHOD_(MEMBERID, get_Memberid)(THIS) PURE;
    STDMETHOD_(SECA_OBJTYPE, get_Kind)(THIS) PURE;
};

/* Definition of interface: ISParameter */
#undef INTERFACE
#define INTERFACE ISParameter

DECLARE_INTERFACE_(ISParameter, SECADispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* SECADispatch methods */
/* You must describe methods for this interface here */
#endif

    /* ISParameter methods */
    STDMETHOD_(BSTR, get_Name)(THIS) PURE;
    STDMETHOD_(ISTypeDesc FAR*, get_Type)(THIS) PURE;
    STDMETHOD_(int, get_IDLFlags)(THIS) PURE;
    STDMETHOD_(SECA_OBJTYPE, get_Kind)(THIS) PURE;
};

#ifdef __cplusplus
class BrowseHelper;
#endif

//
// SEC Extension DLL
// Reset declaration context
//

#undef AFX_DATA
#define AFX_DATA
#undef AFXAPP_DATA
#define AFXAPP_DATA NEAR

#endif
